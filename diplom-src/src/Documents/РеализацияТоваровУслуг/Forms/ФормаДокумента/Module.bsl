
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды    
	
	// {{ СЕК 29.03.24
	КомандаЗаполнить = Команды.Добавить("ВыполнитьАвтозаполнение");   
	КомандаЗаполнить.Действие	= "СЕК_ВыполнитьАвтозаполнение";
    КнопкаЗаполнить = Элементы.Добавить("Заполнить", Тип("КнопкаФормы"),Элементы.ФормаКоманднаяПанель); 
	КнопкаЗаполнить.Заголовок = "Заполнить";  
	КнопкаЗаполнить.ИмяКоманды	= "ВыполнитьАвтозаполнение"; 
	// СЕК 29.03.24 }}
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

// {{ СЕК 29.03.24
&НаКлиенте
Процедура СЕК_ВыполнитьАвтозаполнение(Команда)

	Если Не ЗначениеЗаполнено(Объект.Договор) Тогда   
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заполнен договор";
		Сообщение.Поле = "Договор";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Возврат; 
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.Услуги) Тогда
		ДиалоговоеОкноДаНет(); 	  
	Иначе
		СЕК_ВыполнитьАвтозаполнениеНаСервере()
   	КонецЕсли;
		
КонецПроцедуры   

  &НаКлиенте
Процедура ДиалоговоеОкноДаНет()
	
	//Диалоговое окно "Да/нет" {
	Режим = РежимДиалогаВопрос.ДаНет; 
	Текст = "В табличной части ""Услуги"" есть данные. Вы уверены, что их нужно перезаполнять?"; 
	Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос",ЭтотОбъект, Параметры); 
	ПоказатьВопрос(Оповещение, Текст, Режим, 0); 
	//Диалоговое окно "Да/нет" }
	
КонецПроцедуры	

&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт     
	
	Если Результат = КодВозвратаДиалога.Да Тогда    
		СЕК_ВыполнитьАвтозаполнениеНаСервере();		
	КонецЕсли;
		
КонецПроцедуры     

&НаСервере
Процедура СЕК_ВыполнитьАвтозаполнениеНаСервере()   
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Договор,
		"ВидДоговора, СЕК_ДатаНачалаДействияДоговора, СЕК_ДатаОкончанияДействияДоговора");
    
    //Проверяем вид договора
	Если РеквизитыДоговора.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СЕК_АбонентскоеОбслуживание Тогда   
		
		   ДокументОбъект = РеквизитФормыВЗначение("Объект"); 
		   ДокументОбъект.СЕК_ВыполнитьАвтозаполнение(ДокументОбъект.Договор);
           ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");  
		
	Иначе
		ТекстСообщения = "Для автозаполнения данных необходимо выбрать договор абонентского обслуживания!";
           ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);  
           Возврат; 
	КонецЕсли;

	//Проверяем вступил ли договор в действие или не окончил ли он своё действие 
	Если РеквизитыДоговора.СЕК_ДатаНачалаДействияДоговора > Объект.Дата 
		ИЛИ РеквизитыДоговора.СЕК_ДатаОкончанияДействияДоговора < Объект.Дата Тогда
			ТекстСообщения = "Дата документа не попадает в срок действия договора. Необходимо указать другую дату";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения); 
		Возврат; 
	КонецЕсли;
		
КонецПроцедуры 

 // СЕК 29.03.24 }}

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
